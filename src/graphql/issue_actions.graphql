mutation CreateIssue ($repositoryId: ID!, $title: String!, $body: String!) {
    createIssue(
        input: {
            repositoryId: $repositoryId,
            title: $title,
            body: $body
        }
    ) {
        issue {
            number
            body
            url
            id
        }
    }
}

mutation CloseIssue($issueId: ID!) {
    closeIssue(
        input: {
            issueId: $issueId,
            stateReason: NOT_PLANNED
        }
    ) {
        issue {
            number
            body
            url
            id
        }
    }
}

mutation ReopenIssue($issueId: ID!) {
    reopenIssue(
        input: {
            issueId: $issueId
        }
    ) {
        issue {
            assignees (first: 1){
                edges {
                    node {
                        name
                        login
                    }
                }
            }
            number
            body
            url
            id
        }
    }
}

mutation SetIssueAssign($issueId: ID!, $assigneeIds: [ID!]){
    updateIssue (input: {id: $issueId,
        assigneeIds: $assigneeIds}){
        issue {
            id
            url
            assignees (first: 1){
                edges {
                    node {
                        name
                        login
                    }
                }
            }
        }
    }
}

#mutation CreateIssueScrum ($repositoryId: ID!, $title: String!, $body: String!, $projectIds: [ID!]) {
#  createIssue(
#    input: {
#      repositoryId: $repositoryId,
#      title: $title,
#      body: $body,
#      projectIds: $projectIds
#    }
#  ) {
#    issue {
#      number
#      body
#      url
#      id
#    }
#  }
#}